{"version":3,"sources":["css.module.css","Components/Header/css.module.css","Components/Header/Counter/css.module.css","Components/Header/Buttons/css.module.css","Components/Header/Vectors/css.module.css","Components/Footer/css.module.css","Components/Settings/css.module.css","Components/Settings/Value_selection/css.module.css","Components/Settings/Color_selection/css.module.css","Components/Header/Counter/Counter.tsx","Components/Button/Button.tsx","Components/Header/Buttons/Buttons_Start_Stop.tsx","Components/Header/Vectors/Vectors.tsx","Components/Header/Header.tsx","Components/Footer/Footer.tsx","Components/Settings/Value_selection/Value_selection.tsx","Components/Settings/Color_selection/Color_selection.tsx","Components/Settings/Settings.tsx","LocaStorage.js","App.tsx","render.js","State/state.tsx","index.tsx"],"names":["module","exports","Counter","props","color","className","style","error","value","Button","height","width","borderRadius","backgroundColor","zero","onClick","id","disabled","content","Buttons_Start_Stop","fucntion","main","buttons_Start_Reset","map","button","AddValueCounter","ResetCounter","Vectors","startvalue","maxvalue","Header","value_counter","Footer","ValueSelection","max","start","onChange","event","String","currentTarget","UpdateMaxValue","newMaxValue","Number","newStartValue","ErrorValues","ChangeMaxValue","ChangeStartValue","UpdateStartValue","ColorSelection","buttons_color","ChangeColorValue","Settings","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","App","state","StartValue","setStart","setMax","setColor","setValue","setError","shift","unshift","rerenderEntireTree","chislo","button_Disabled_Start","selectedcolor","MaxValue","inputerror","button_Disabled_Reset","button_Enabled_Reset","button_Enabled_Start","ReactDOM","render","UpdateMaxValueVectors","UpdateStartValueVectors","document","getElementById"],"mappings":"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","file":"static/js/main.2f7bfd6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"css_App__1Oq1a\",\"Footer\":\"css_Footer__1E3VD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Vectors\":\"css_Vectors__14UYc\",\"Buttons\":\"css_Buttons__32wLK\",\"Header\":\"css_Header__2-bnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"css_Counter__1aSYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"css_main__3Tk6T\",\"test1\":\"css_test1__3GQ16\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"css_main__uGcuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"css_Footer__s_Vzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"css_main__1_LUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"css_main__3ABub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"css_main__2Y1QG\"};","import React, {useState} from 'react';\r\nimport style from './css.module.css';\r\n\r\n\r\ntype CounterType =\r\n    {\r\n        color:string\r\n        value:string\r\n        error:boolean\r\n    }\r\nfunction Counter(props:CounterType) {\r\n    let colorError = {\r\n        color: \"red\"\r\n    }\r\n    let color = {\r\n        color:props.color,\r\n    }\r\n    return(\r\n        <div className={style.Counter}>\r\n\r\n            {props.error && <span style={colorError}>{props.value}</span> || <span style={color}>{props.value}</span>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Counter;\r\n","import React,{ChangeEvent} from 'react';\r\nimport style from './css.module.css';\r\n////// False - Квадрат\r\n////// True - Круг\r\n\r\nexport type ButtonType =\r\n    {\r\n        height:string,\r\n        width:string,\r\n        borderRadius?:string,\r\n        backgroundColor?:string,\r\n        content?: string;\r\n        onClick?: () => void\r\n        disabled?: boolean\r\n        id?: string\r\n    }\r\n\r\n\r\nfunction Button(props: ButtonType) {\r\n    let style = {\r\n        height: props.height,\r\n        width: props.width,\r\n        borderRadius: props.borderRadius,\r\n        backgroundColor: props.backgroundColor,\r\n    }\r\n\r\n    let zero = () => {}\r\n    if (props.onClick) zero = props.onClick\r\n\r\n\r\n    return (\r\n        <button id={props.id} onClick={zero} style={style} disabled={props.disabled} value={style.backgroundColor} >\r\n            {props.content}\r\n        </button>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Button;\r\n","import React, {useState} from 'react';\r\nimport style from './css.module.css';\r\nimport Button from \"../../Button/Button\";\r\nimport {buttons_Start_ResetType} from \"../../../State/state\";\r\n\r\n\r\ntype Buttons_Start_StopType =\r\n    {\r\n        AddValueCounter: () => void\r\n        ResetCounter:() => void\r\n        buttons_Start_Reset:Array<buttons_Start_ResetType>\r\n    }\r\n\r\n\r\nfunction Buttons_Start_Stop(props:Buttons_Start_StopType) {\r\n    let fucntion = () => {}\r\n\r\n\r\n    return(\r\n        <div className={style.main}>\r\n            {props.buttons_Start_Reset.map(button =>\r\n            {\r\n                if (button.id === \"1\") fucntion = props.AddValueCounter\r\n                else  fucntion = props.ResetCounter\r\n                return <Button height={button.height} width={button.width}\r\n                               backgroundColor={button.backgroundColor} content={button.content}\r\n                               borderRadius={button.borderRadius} onClick={fucntion} disabled={button.disabled}\r\n                />\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Buttons_Start_Stop;\r\n","import React, {useState} from 'react';\r\nimport style from './css.module.css';\r\n\r\n\r\ntype VectorsType =\r\n    {\r\n        color:string\r\n        startvalue:string\r\n        maxvalue: string\r\n    }\r\nfunction Vectors(props:VectorsType) {\r\n    return(\r\n        <div className={style.main}>\r\n            Текущие найстроки<br />\r\n            Значения старта: {props.startvalue}<br />\r\n            Макс. значение: {props.maxvalue}<br />\r\n            Выбраный цвет: {props.color}<br />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Vectors;\r\n","import React from 'react';\r\nimport style from './css.module.css';\r\nimport Counter from \"./Counter/Counter\";\r\nimport Button, {ButtonType} from \"../Button/Button\";\r\nimport Buttons_Start_Stop from \"./Buttons/Buttons_Start_Stop\";\r\nimport Vectors from \"./Vectors/Vectors\";\r\nimport {buttons_Start_ResetType} from \"../../State/state\";\r\n\r\n\r\nexport type HeaderType =\r\n    {\r\n        error: boolean\r\n        AddValueCounter: () => void,\r\n        ResetCounter:() => void,\r\n        value_counter:string,\r\n        buttons_Start_Reset:Array<buttons_Start_ResetType>\r\n        color:string\r\n        startvalue:string\r\n        maxvalue: string\r\n    }\r\nfunction Header(props:HeaderType) {\r\n    return(\r\n        <div className={style.Header}>\r\n            <Vectors startvalue={props.startvalue} maxvalue={props.maxvalue} color={props.color}/>\r\n            <Counter value={props.value_counter} color={props.color} error={props.error}/>\r\n            <Buttons_Start_Stop AddValueCounter={props.AddValueCounter} ResetCounter={props.ResetCounter}\r\n                                buttons_Start_Reset={props.buttons_Start_Reset}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport style from './css.module.css';\r\n\r\n\r\ntype FooterType =\r\n    {\r\n    }\r\nfunction Footer(props:FooterType) {\r\n    return(\r\n        <div className={style.Footer}>\r\n          Молодой самурай Иван\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Footer;\r\n","import React, {ChangeEvent} from 'react';\r\nimport style from './css.module.css';\r\nimport Button from \"../../Button/Button\";\r\nimport {rerenderEntireTree} from \"../../../render\";\r\n\r\n\r\ntype ValueSelectionType =\r\n    {\r\n        ChangeStartValue: (startvalue: string) => void\r\n        ChangeMaxValue: (maxvalue: string) => void\r\n        newMaxValue: string,\r\n        newStartValue: string,\r\n        UpdateMaxValue: (maxvalue:string) => void\r\n        UpdateStartValue: (startvalue:string) => void\r\n        ErrorValues: (inputerror:boolean) => void\r\n\r\n    }\r\n\r\nfunction ValueSelection(props: ValueSelectionType) {\r\n    let max = \"\"\r\n    let start = \"\"\r\n\r\n    function OnChangeMaxValue(event: ChangeEvent<HTMLInputElement>) {\r\n        max = String(event.currentTarget.value)\r\n        props.UpdateMaxValue(max)\r\n    }\r\n\r\n    function OnChangeStartValue(event: ChangeEvent<HTMLInputElement>) {\r\n        start = String(event.currentTarget.value)\r\n        props.UpdateStartValue(start)\r\n\r\n    }\r\n\r\n    function SentValue() {\r\ndebugger\r\n        if (Number(props.newMaxValue) <= Number(props.newStartValue) || Number(props.newStartValue) <= -1) {\r\n            props.ErrorValues(true)\r\n        } else {\r\n            props.ChangeMaxValue(props.newMaxValue)\r\n            props.ChangeStartValue(props.newStartValue)\r\n            props.ErrorValues(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            Введите максимальное значение <br/>( Не меньше и не равное значению старта)<input onChange={OnChangeMaxValue} value={props.newMaxValue}/>\r\n            <Button height={\"50px\"} width={\"100px\"} content={\"Потвердить\"} onClick={SentValue}/>\r\n            Введите Значение старта <br />( Не меньше 0 )<input onChange={OnChangeStartValue} value={props.newStartValue}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ValueSelection;\r\n","import React from 'react';\r\nimport style from './css.module.css';\r\nimport Button from \"../../Button/Button\";\r\nimport {buttons_colorType} from \"../../../State/state\";\r\n\r\n\r\ntype ColorSelectionType =\r\n    {\r\n        ChangeColorValue:(colorSelection:string) => void\r\n        buttons_color:Array<any>\r\n    }\r\nfunction ColorSelection(props:ColorSelectionType) {\r\n\r\n\r\n    return(<div className={style.main}>\r\n            <br/>\r\n\r\n            Выберите цвет цифр из предложенной ниже палитры <br/><br/>\r\n            {props.buttons_color.map(button =>\r\n                {\r\n                    function color() {\r\n                        props.ChangeColorValue(button.backgroundColor)\r\n                    }\r\n                    return <Button id={button.id} height={button.height} width={button.width}\r\n                                   backgroundColor={button.backgroundColor}  onClick={color}\r\n                    />\r\n                }\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ColorSelection;\r\n","import React from 'react';\r\nimport style from './css.module.css';\r\nimport ValueSelection from \"./Value_selection/Value_selection\";\r\nimport ColorSelection from \"./Color_selection/Color_selection\";\r\nimport {buttons_colorType} from \"../../State/state\";\r\n\r\n\r\n export type SettingsType =\r\n    {\r\n        ChangeStartValue:(startvalue:string) => void\r\n        ChangeColorValue:(colorSelection:string) => void\r\n        ChangeMaxValue:(maxvalue:string) => void\r\n        buttons_color:Array<any>\r\n        newMaxValue : string,\r\n        newStartValue : string,\r\n        UpdateMaxValue: (maxvalue:string) => void\r\n        UpdateStartValue: (startvalue:string) => void\r\n        ErrorValues: (inputerror:boolean) => void\r\n\r\n    }\r\nfunction Settings(props:SettingsType) {\r\n    return(\r\n        <div className={style.main}>\r\n            <ValueSelection ChangeStartValue={props.ChangeStartValue}\r\n                            ChangeMaxValue={props.ChangeMaxValue}\r\n                            newMaxValue={props.newMaxValue}\r\n                            newStartValue={props.newStartValue}\r\n                            UpdateMaxValue={props.UpdateMaxValue}\r\n                            UpdateStartValue={props.UpdateStartValue}\r\n                            ErrorValues={props.ErrorValues}\r\n\r\n            />\r\n            <ColorSelection ChangeColorValue={props.ChangeColorValue}\r\n                            buttons_color={props.buttons_color}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings;\r\n","import React, {useState} from 'react';\r\n\r\n// Hook\r\nexport function useLocalStorage(key, initialValue) {\r\n\t// Стейт сохраняет наше значение\r\n\t// Передаём функцию начального состояния в useState, чтобы логика выполнялась только один раз\r\n\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\t// Получить из локального хранилища по ключу\r\n\t\t\tconst item = window.localStorage.getItem(key);\r\n\t\t\t// Разобрать сохраненный json или, если никто не вернет initialValue\r\n\t\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t\t} catch (error) {\r\n\t\t\t// Если ошибка, также вернуть initialValue\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn initialValue;\r\n\t\t}\r\n\t});\r\n\r\n\t// Вернуть упакованную версию setter-функции useState, которая\r\n\t// сохраняет новое значение для localStorage.\r\n\tconst setValue = value => {\r\n\t\ttry {\r\n\t\t\t//Разрешить value быть функцией, поэтому у нас тот же API, что и для useState\r\n\t\t\tconst valueToStore =\r\n\t\t\t\tvalue instanceof Function ? value(storedValue) : value;\r\n\t\t\t// Сохранить состояние\r\n\t\t\tsetStoredValue(valueToStore);\r\n\t\t\t// Сохранить в локальном хранилище\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t\t} catch (error) {\r\n\t\t\t//Более продвинутая реализация будет обрабатывать ошибки\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [storedValue, setValue];\r\n}\r\n","import React, {useState} from 'react';\r\nimport style from './css.module.css';\r\nimport Header from \"./Components/Header/Header\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport {rerenderEntireTree} from \"./render\";\r\nimport {useLocalStorage} from \"./LocaStorage\";\r\n\r\n\r\ntype AppType =\r\n    {\r\n        state: any\r\n        UpdateMaxValue: (maxvalue: string) => void\r\n        UpdateStartValue: (startvalue: string) => void\r\n        UpdateMaxValueVectors: (max: number) => void\r\n        UpdateStartValueVectors: (start: number) => void\r\n    }\r\n\r\nfunction App(props: AppType) {\r\n    let [start, setStart] = useLocalStorage(\"StartValue\", String(props.state.Header.StartValue))\r\n    let [max, setMax] = useLocalStorage(\"MaxValue\", String(props.state.Header.StartValue))\r\n    let [color, setColor] = useLocalStorage(\"Color\", \"White\")\r\n    let [value, setValue] = useState<string>(start)\r\n    let [error, setError] = useState<boolean>(false)\r\n\r\n    function AddValueCounter() {\r\n        let chislo = String(Number(value) + 1)\r\n        if (Number(chislo) === Number(max)) {\r\n            setError(true)\r\n            props.state.Header.buttons_Start_Reset.shift()\r\n            props.state.Header.buttons_Start_Reset.unshift(props.state.Header.button_Disabled_Start)\r\n            rerenderEntireTree(props.state)\r\n        }\r\n        setValue(chislo)\r\n    }\r\n\r\n    function ResetCounter() {\r\n        let enabled = {\r\n            id: \"1\", height: \"100px\", width: \"100px\", backgroundColor: \"green\",\r\n            content: \"start\", borderRadius: \"100%\", disabled: false\r\n        }\r\n        props.state.Header.buttons_Start_Reset.shift()\r\n        props.state.Header.buttons_Start_Reset.unshift(enabled)\r\n        setValue(start)\r\n        setError(false)\r\n        rerenderEntireTree(props.state)\r\n    }\r\n\r\n    function ChangeMaxValue(maxvalue: string) {\r\n        props.state.Header.MaxValue = setMax(maxvalue)\r\n    }\r\n\r\n    function ChangeStartValue(startvalue: string) {\r\n        props.state.Header.StartValue = setStart(startvalue)\r\n\r\n    }\r\n\r\n    function ErrorValues(inputerror: boolean) {\r\n        if (inputerror) {\r\n            props.state.Header.buttons_Start_Reset.shift()\r\n            props.state.Header.buttons_Start_Reset.shift()\r\n            props.state.Header.buttons_Start_Reset.unshift(props.state.Header.button_Disabled_Reset)\r\n            props.state.Header.buttons_Start_Reset.unshift(props.state.Header.button_Disabled_Start)\r\n            setValue(\"Ошибка ввода\")\r\n            rerenderEntireTree(props.state)\r\n        } else {\r\n            props.state.Header.buttons_Start_Reset.shift()\r\n            props.state.Header.buttons_Start_Reset.shift()\r\n            props.state.Header.buttons_Start_Reset.unshift(props.state.Header.button_Enabled_Reset)\r\n            props.state.Header.buttons_Start_Reset.unshift(props.state.Header.button_Enabled_Start)\r\n            ResetCounter()\r\n            setValue(String(props.state.Settings.StartValue))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function ChangeColorValue(selectedcolor: string) {\r\n        setColor(selectedcolor)\r\n    }\r\n\r\n    return (\r\n        <div className={style.App}>\r\n            <Header error={error}\r\n                    value_counter={value}\r\n                    AddValueCounter={AddValueCounter}\r\n                    ResetCounter={ResetCounter}\r\n                    buttons_Start_Reset={props.state.Header.buttons_Start_Reset}\r\n                    color={color}\r\n                    startvalue={start}\r\n                    maxvalue={max}\r\n            />\r\n            <Settings ChangeStartValue={ChangeStartValue}\r\n                      ChangeColorValue={ChangeColorValue}\r\n                      ChangeMaxValue={ChangeMaxValue}\r\n                      ErrorValues={ErrorValues}\r\n                      UpdateMaxValue={props.UpdateMaxValue}\r\n                      UpdateStartValue={props.UpdateStartValue}\r\n                      newMaxValue={props.state.Settings.MaxValue}\r\n                      newStartValue={props.state.Settings.StartValue}\r\n                      buttons_color={props.state.Settings.buttons_color}\r\n            />\r\n            <Footer/>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport {UpdateMaxValue,UpdateStartValue,UpdateMaxValueVectors, UpdateStartValueVectors} from \"./State/state\";\r\n\r\nexport let rerenderEntireTree = (state) =>\r\n{\r\n\tReactDOM.render(\r\n\t\t<App state={state}\r\n\t\t\t UpdateMaxValue={UpdateMaxValue}\r\n\t\t\t UpdateStartValue={UpdateStartValue}\r\n\t\t\t UpdateMaxValueVectors={UpdateMaxValueVectors}\r\n\t\t\t UpdateStartValueVectors={UpdateStartValueVectors}\r\n\t\t/>,\r\n\t\tdocument.getElementById('root'));\r\n}","import {rerenderEntireTree} from \"../render\";\r\n\r\n\r\nexport type StateType = {\r\n\tHeader : HeaderType,\r\n\tSettings : SettingsType\r\n}\r\ntype HeaderType = {\r\n\tbuttons_Start_Reset: Array<buttons_Start_ResetType>\r\n}\r\ntype SettingsType = {\r\n\tbuttons_Start_Reset: Array<buttons_colorType>\r\n}\r\nexport type buttons_Start_ResetType =\r\n\t{\r\n\t\tid:string,\r\n\t\theight: string,\r\n\t\twidth:string,\r\n\t\tbackgroundColor:string,\r\n\t\tcontent:string,\r\n\t\tborderRadius:string,\r\n\t\tdisabled:boolean,\r\n\t}\r\nexport type buttons_colorType =\r\n\t{\r\n\t\tid:string,\r\n\t\theight: string,\r\n\t\twidth:string,\r\n\t\tbackgroundColor:string,\r\n\t}\r\nexport let state = {\r\n\tHeader: {\r\n\t\tbuttons_Start_Reset: [\r\n\t\t\t{\r\n\t\t\t\tid: \"1\", height: \"100px\", width: \"100px\", backgroundColor: \"green\",\r\n\t\t\t\tcontent: \"start\", borderRadius: \"100%\", disabled: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: \"2\", height: \"100px\", width: \"100px\", backgroundColor: \"red\",\r\n\t\t\t\tcontent: \"reset\", borderRadius: \"100%\", disabled: false\r\n\t\t\t}\r\n\t\t],\r\n\t\tbutton_Disabled_Start:{id: \"1\", height: \"100px\", width: \"100px\", backgroundColor: \"green\",\r\n\t\t\tcontent: \"start\", borderRadius: \"100%\", disabled: true},\r\n\t\tbutton_Disabled_Reset:{id: \"2\", height: \"100px\", width: \"100px\", backgroundColor: \"red\",\r\n\t\t\tcontent: \"reset\", borderRadius: \"100%\", disabled: true},\r\n\t\tbutton_Enabled_Start:{id: \"1\", height: \"100px\", width: \"100px\", backgroundColor: \"green\",\r\n\t\t\tcontent: \"start\", borderRadius: \"100%\", disabled: false},\r\n\t\tbutton_Enabled_Reset:{id: \"2\", height: \"100px\", width: \"100px\", backgroundColor: \"red\",\r\n\t\t\tcontent: \"start\", borderRadius: \"100%\", disabled: false},\r\n\t\tMaxValue: \"5\",\r\n\t\tStartValue: \"1\",\r\n\t},\r\n\tSettings: {\r\n\t\tbuttons_color: [\r\n\t\t\t{id: \"1\", height: \"50px\", width: \"50px\", backgroundColor: \"white\"},\r\n\t\t\t{id: \"2\", height: \"50px\", width: \"50px\", backgroundColor: \"orange\"},\r\n\t\t\t{id: \"3\", height: \"50px\", width: \"50px\", backgroundColor: \"blue\"},\r\n\t\t\t{id: \"4\", height: \"50px\", width: \"50px\", backgroundColor: \"black\"},\r\n\t\t\t{id: \"5\", height: \"50px\", width: \"50px\", backgroundColor: \"green\"},\r\n\t\t\t{id: \"6\", height: \"50px\", width: \"50px\", backgroundColor: \"yellow\"},\r\n\t\t\t{id: \"7\", height: \"50px\", width: \"50px\", backgroundColor: \"brown\"},\r\n\t\t\t{id: \"8\", height: \"50px\", width: \"50px\", backgroundColor: \"purple\"},\r\n\t\t\t{id: \"9\", height: \"50px\", width: \"50px\", backgroundColor: \"darkorchid\"},\r\n\t\t\t{id: \"10\", height: \"50px\", width: \"50px\", backgroundColor: \"aqua\"},\r\n\t\t\t{id: \"11\", height: \"50px\", width: \"50px\", backgroundColor: \"chocolate\"},\r\n\t\t\t{id: \"12\", height: \"50px\", width: \"50px\", backgroundColor: \"cyan\"},\r\n\t\t\t{id: \"13\", height: \"50px\", width: \"50px\", backgroundColor: \"aliceblue\"},\r\n\t\t\t{id: \"14\", height: \"50px\", width: \"50px\", backgroundColor: \"cornflowerblue\"},\r\n\t\t\t{id: \"15\", height: \"50px\", width: \"50px\", backgroundColor: \"chartreuse\"},\r\n\t\t\t{id: \"16\", height: \"50px\", width: \"50px\", backgroundColor: \"purple\"},\r\n\t\t\t{id: \"17\", height: \"50px\", width: \"50px\", backgroundColor: \"aquamarine\"},\r\n\t\t\t{id: \"18\", height: \"50px\", width: \"50px\", backgroundColor: \"darkgoldenrod\"},\r\n\t\t\t{id: \"19\", height: \"50px\", width: \"50px\", backgroundColor: \"azure\"},\r\n\t\t\t{id: \"20\", height: \"50px\", width: \"50px\", backgroundColor: \"bisque\"},\r\n\t\t\t{id: \"21\", height: \"50px\", width: \"50px\", backgroundColor: \"blueviolet\"},\r\n\t\t\t{id: \"22\", height: \"50px\", width: \"50px\", backgroundColor: \"burlywood\"},\r\n\t\t\t{id: \"23\", height: \"50px\", width: \"50px\", backgroundColor: \"cadetblue\"},\r\n\t\t\t{id: \"24\", height: \"50px\", width: \"50px\", backgroundColor: \"coral\"},\r\n\t\t\t{id: \"25\", height: \"50px\", width: \"50px\", backgroundColor: \"darkblue\"},\r\n\t\t\t{id: \"26\", height: \"50px\", width: \"50px\", backgroundColor: \"darkgreen\"},\r\n\t\t\t{id: \"27\", height: \"50px\", width: \"50px\", backgroundColor: \"darkmagenta\"},\r\n\t\t\t{id: \"28\", height: \"50px\", width: \"50px\", backgroundColor: \"steelblue\"},\r\n\t\t\t{id: \"29\", height: \"50px\", width: \"50px\", backgroundColor: \"tan\"},\r\n\t\t\t{id: \"30\", height: \"50px\", width: \"50px\", backgroundColor: \"til\"},\r\n\t\t\t{id: \"31\", height: \"50px\", width: \"50px\", backgroundColor: \"rebeccapurple\"},\r\n\t\t\t{id: \"32\", height: \"50px\", width: \"50px\", backgroundColor: \"royalblue\"},\r\n\t\t\t{id: \"33\", height: \"50px\", width: \"50px\", backgroundColor: \"saddlebrown\"},\r\n\t\t\t{id: \"34\", height: \"50px\", width: \"50px\", backgroundColor: \"salmon\"},\r\n\t\t\t{id: \"35\", height: \"50px\", width: \"50px\", backgroundColor: \"sandybrown\"},\r\n\t\t\t{id: \"36\", height: \"50px\", width: \"50px\", backgroundColor: \"seagreen\"},\r\n\t\t\t{id: \"37\", height: \"50px\", width: \"50px\", backgroundColor: \"seashell\"},\r\n\t\t\t{id: \"38\", height: \"50px\", width: \"50px\", backgroundColor: \"sienna\"},\r\n\t\t\t{id: \"39\", height: \"50px\", width: \"50px\", backgroundColor: \"silver\"},\r\n\t\t\t{id: \"40\", height: \"50px\", width: \"50px\", backgroundColor: \"darkkhaki\"},\r\n\r\n\t\t],\r\n\t\tMaxValue: \"5\",\r\n\t\tStartValue: \"1\",\r\n\r\n\t}\r\n}\r\nexport const UpdateMaxValue = (maxvalue:string) => {\r\n\tstate.Settings.MaxValue = maxvalue\r\n\trerenderEntireTree(state)\r\n\r\n}\r\nexport const UpdateStartValue = (startvalue:string) => {\r\n\tstate.Settings.StartValue = startvalue\r\n\trerenderEntireTree(state)\r\n}\r\nexport const UpdateMaxValueVectors = (max:string) => {\r\n\tstate.Header.MaxValue = max\r\n\trerenderEntireTree(state)\r\n}\r\nexport const UpdateStartValueVectors = (start:string) => {\r\n\tstate.Header.StartValue = start\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {state} from \"./State/state\";\r\nimport {rerenderEntireTree} from \"./render\";\r\n\r\n\r\nrerenderEntireTree(state)"],"sourceRoot":""}