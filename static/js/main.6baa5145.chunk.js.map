{"version":3,"sources":["Components/Counter/css.module.css","Components/Counter/Screen/css.module.css","Components/Counter/Screen/screen.tsx","Components/Counter/counter.tsx","App.tsx","index.tsx"],"names":["module","exports","Screen","props","className","style","counter","status","max","content","normal","Counter","main","maxvalue","onChange","SetMax","value","maxcount","screen","error","box","disabled","onClick","ButtonGo","go","ButtonReset","reset","App","useState","setError","setValue","setMaxcount","event","currentTarget","Number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,IAAM,iBAAiB,GAAK,gBAAgB,MAAQ,mBAAmB,IAAM,iBAAiB,SAAW,wB,gBCAjLD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,OAAS,oBAAoB,IAAM,mB,2MCuBrEC,MAhBf,SAAgBC,GAGZ,OACI,yBAAKC,UAAWC,IAAMC,SAChBH,EAAMI,QAAW,0BAAMH,UAAWC,IAAMG,KACrCL,EAAMM,UAEX,0BAAML,UAAWC,IAAMK,QAClBP,EAAMM,WCkBRE,MArBf,SAAiBR,GAEb,OACI,yBAAKC,UAAWC,IAAMO,MAClB,yBAAKR,UAAWC,IAAMQ,UAAtB,QACA,yBAAKT,UAAWC,IAAMQ,UAAU,2BAAOC,SAAUX,EAAMY,OAAQC,MAAOb,EAAMc,YAC5E,yBAAKb,UAAWC,IAAMa,QAClB,kBAAC,EAAD,CAAQT,QAASN,EAAMa,MAAOT,OAASJ,EAAMgB,SAGjD,yBAAKf,UAAWC,IAAMe,KACjBjB,EAAMgB,OACH,4BAAQE,UAAQ,EAACC,QAASnB,EAAMoB,SAAUnB,UAAWC,IAAMG,KAA3D,OACF,4BAASc,QAASnB,EAAMoB,SAAUnB,UAAWC,IAAMmB,IAAnD,MACd,4BAAQF,QAASnB,EAAMsB,YAAarB,UAAWC,IAAMqB,OAArD,YCaWC,MArCf,WAAgB,IAAD,EAEYC,mBAAwB,MAFpC,mBAENT,EAFM,KAEAU,EAFA,OAGaD,mBAAS,GAHtB,mBAGNZ,EAHM,KAGCc,EAHD,OAImBF,mBAAS,GAJ5B,mBAINX,EAJM,KAIIc,EAJJ,KAwBb,OACE,yBAAK3B,UAAU,OACb,kBAAC,EAAD,CACEW,OAPS,SAACiB,GACV,IAAIxB,EAAMwB,EAAMC,cAAcjB,MAC9Be,EAAYG,OAAO1B,KAMnBS,SAAWA,EACXD,MAASA,EACTG,MAASA,EACTI,SAxBW,WAEXO,EADAd,GAAS,GAELA,IAAUC,GAEVY,EAAS,8HAoBbJ,YAhBc,WACdK,EAAS,GACTD,EAAS,SCfjBM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6baa5145.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"css_main__1u7ol\",\"screen\":\"css_screen__29KSe\",\"box\":\"css_box__1lGVC\",\"go\":\"css_go__2Weys\",\"reset\":\"css_reset__1Ru-m\",\"max\":\"css_max__23nkS\",\"maxvalue\":\"css_maxvalue__N-dZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"css_counter__1YvnO\",\"normal\":\"css_normal__2E4Xg\",\"max\":\"css_max__3AEIV\"};","import React from 'react';\nimport style from './css.module.css'\n\ntype ScreenType =\n    {\n        content : number\n        status: any\n    }\nfunction Screen(props:ScreenType) {\n\n\n    return (\n        <div className={style.counter}>\n            { props.status  && <span className={style.max}>\n                {props.content}\n            </span> ||\n            <span className={style.normal}>\n                {props.content}\n            </span>\n            }\n        </div>\n    );\n}\n\nexport default Screen;","import React, {ChangeEvent, useState} from 'react';\nimport style from './css.module.css'\nimport Screen from './Screen/screen';\n\ntype CounterType =\n    {\n        SetMax: (event: ChangeEvent<HTMLInputElement>) => void\n        maxcount:number\n        value:number\n        error: any\n        ButtonGo: () => void\n        ButtonReset: () => void\n\n    }\nfunction Counter(props:CounterType) {\n\n    return (\n        <div className={style.main}>\n            <div className={style.maxvalue}>Max:</div>\n            <div className={style.maxvalue}><input onChange={props.SetMax} value={props.maxcount}/></div>\n            <div className={style.screen}>\n                <Screen content={props.value} status= {props.error} />\n            </div>\n\n            <div className={style.box}>\n                {props.error &&\n                    <button disabled onClick={props.ButtonGo} className={style.max}>Go</button>\n                ||<button  onClick={props.ButtonGo} className={style.go}>Go</button>}\n\t\t\t\t<button onClick={props.ButtonReset} className={style.reset}>Reset</button>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Counter;\n","import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\nimport Counter from \"./Components/Counter/counter\";\n\nfunction App() {\n\n    let [error,setError] = useState<string | null>(null)\n    let [value, setValue] = useState(0)\n    let [maxcount, setMaxcount] = useState(5)\n\n\n    let ButtonGo = () => {\n        value += 1\n        setValue(value)\n        if (value === maxcount)\n        {\n            setError('Максимальное значение');\n        }\n\n    }\n    let ButtonReset = () => {\n        setValue(0)\n        setError('')\n    }\n    let SetMax = (event: ChangeEvent<HTMLInputElement>) => {\n        let max = event.currentTarget.value\n        setMaxcount(Number(max))\n    }\n  return (\n    <div className=\"App\">\n      <Counter\n        SetMax = {SetMax}\n        maxcount ={maxcount}\n        value = {value}\n        error = {error}\n        ButtonGo = {ButtonGo}\n        ButtonReset= {ButtonReset} />\n    </div>\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}